/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sableccsupport.sccparser.node;

import org.sableccsupport.sccparser.analysis.*;

@SuppressWarnings("nls")
public final class APackage extends PPackage
{
    private TPackage _package_;
    private PPkgName _pkgName_;

    public APackage()
    {
        // Constructor
    }

    public APackage(
        @SuppressWarnings("hiding") TPackage _package_,
        @SuppressWarnings("hiding") PPkgName _pkgName_)
    {
        // Constructor
        setPackage(_package_);

        setPkgName(_pkgName_);

    }

    @Override
    public Object clone()
    {
        return new APackage(
            cloneNode(this._package_),
            cloneNode(this._pkgName_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPackage(this);
    }

    public TPackage getPackage()
    {
        return this._package_;
    }

    public void setPackage(TPackage node)
    {
        if(this._package_ != null)
        {
            this._package_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._package_ = node;
    }

    public PPkgName getPkgName()
    {
        return this._pkgName_;
    }

    public void setPkgName(PPkgName node)
    {
        if(this._pkgName_ != null)
        {
            this._pkgName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pkgName_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._package_)
            + toString(this._pkgName_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._package_ == child)
        {
            this._package_ = null;
            return;
        }

        if(this._pkgName_ == child)
        {
            this._pkgName_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._package_ == oldChild)
        {
            setPackage((TPackage) newChild);
            return;
        }

        if(this._pkgName_ == oldChild)
        {
            setPkgName((PPkgName) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
